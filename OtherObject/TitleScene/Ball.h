#pragma once
#include "../../Base/NormalObject.h"
#include  "../../Engine/GameObject/PolyLine.h"
#include <map>

//ボールを打つ時の球
enum class Type {
	FLAT,      //フラット
	TOP_SPIN,  //トップスピン
	SLICE,     //スライス
	LOB,       //ロブ
	MAX
};

/// <summary>
/// テニスボール
/// </summary>
class Ball : public NormalObject
{
	//ボールの状態
	enum class BallStatus
	{
		PURPOSE_MOVE, //目的地まで移動
		BOUND_MOVE,   //バウンド移動
	};

	map<Type, XMFLOAT4> lineColor_; //ボールの型ごとのライン色

	BallStatus ballStatus_;      //ボールの状態
	Type type_;					 //ボールの型

	int hTime_;                  //タイマーハンドル
	int hEffect_;                //エフェクトハンドル
	int boundCount_;             //バウンドの回数
	float ratio_;			     //割合(始点から終点のどこの割合にいるか)
	float moveTime_;			 //始点から終点まで動く時間
	float firstAngle_;           //放物線の最初の角度
	bool isGoToBasePoint_;       //プレイヤーの基準点に向かうか

	XMVECTOR endPointDirection_; //終点までのベクトル
	XMVECTOR progressVector_;    //進行ベクトル

	XMFLOAT2 strength_;   //強さ(XとY方向の)
	XMFLOAT2 v0_;		  //初速度(XとY方向の)

	XMFLOAT3 startPoint_; //ボールの始点
	XMFLOAT3 endPoint_;   //ボールの終点

	PolyLine* pLine_; //ボールの軌跡描画用

public:

	//コンストラクタ
	Ball(GameObject* parent, std::string modelPath, std::string name);
	Ball(GameObject* parent);

	//デストラクタ
	~Ball() {};

	//初期化
	void ChildInitialize() override;

	//更新
	void ChildUpdate() override;

	//描画
	void ChildDraw() override;
	
	//////////////////////////////////関数///////////////////////////////////////

	/// <summary>
	/// 目的地まで移動
	/// </summary>
	void MoveToPurpose();

	/// <summary>
	/// バウンド移動
	/// </summary>
	void BoundMove();

	/// <summary>
	/// リセット(始点終点すべて再設定)
	/// </summary>
	void Reset(bool isGotoPlayer);

	/// <summary>
	/// 終点のポジションを取得
	/// </summary>
	/// <returns>終点のポジション</returns>
	XMFLOAT3 GetEndPosition() { return endPoint_; }

	/// <summary>
    /// 型を設定
    /// </summary>
    /// <param name="t">設定したい型</param>
	void SetType(Type t) { type_ = t; }
};

